name: Python CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-test-security:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]   # Teste auf mehreren Python-Versionen

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pip-audit bandit black flake8 coverage pytest mypy

      # --- Linting & Formatting ---
      - name: Lint with flake8
        run: flake8 app/ test/

      - name: Check formatting with black
        run: black --check app/ test/

      - name: Type check with mypy
        run: mypy app/

      # --- Security ---
      - name: Run pip-audit (dependency vulnerabilities)
        run: pip-audit

      - name: Run Bandit (static security analysis)
        run: bandit -r app/ -ll

      # --- Testing with coverage ---
      - name: Run tests with pytest and coverage
        run: pytest --cov=app --cov-fail-under=80 --cov-report=term-missing --cov-report=xml

      # --- Upload coverage artifact ---
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml
